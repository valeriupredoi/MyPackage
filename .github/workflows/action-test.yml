name: Test

# runs on a push on master and at the end of every day
on:
  push:
    branches:
    - main
  schedule:
    - cron: '0 0 * * *'

jobs:
  linux:
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
      fail-fast: false
    name: Linux Python ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: myenv
          environment-file: environment.yml
          python-version: ${{ matrix.python-version }}
          miniconda-version: "latest"
          channels: conda-forge
      - shell: bash -l {0}
        run: mkdir -p test_linux_artifacts_python_${{ matrix.python-version }}
      - shell: bash -l {0}
        run: conda --version 2>&1 | tee test_linux_artifacts_python_${{ matrix.python-version }}/conda_version.txt
      - shell: bash -l {0}
        run: python -V 2>&1 | tee test_linux_artifacts_python_${{ matrix.python-version }}/python_version.txt
      - shell: bash -l {0}
        run: pip install -e .[develop] 2>&1 | tee test_linux_artifacts_python_${{ matrix.python-version }}/install.txt
      - shell: bash -l {0}
        run: pytest tests/mytest.py 2>&1 | tee test_linux_artifacts_python_${{ matrix.python-version }}/test_report.txt
      - name: Upload artifacts
        if: ${{ always() }}  # upload artifacts even if fail
        uses: actions/upload-artifact@v2
        with:
          name: Test_Linux_python_${{ matrix.python-version }}
          path: test_linux_artifacts_python_${{ matrix.python-version }}

  osx:
    runs-on: "macos-latest"
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]  # 3.9 is still dodgy on 6 Jan 2021
      fail-fast: false
    name: OSX Python ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: myenv
          environment-file: environment.yml
          python-version: ${{ matrix.python-version }}
          miniconda-version: "latest"
          channels: conda-forge
      - shell: bash -l {0}
        run: mkdir -p test_osx_artifacts_python_${{ matrix.python-version }}
      - shell: bash -l {0}
        run: conda --version 2>&1 | tee test_osx_artifacts_python_${{ matrix.python-version }}/conda_version.txt
      - shell: bash -l {0}
        run: python -V 2>&1 | tee test_osx_artifacts_python_${{ matrix.python-version }}/python_version.txt
      - shell: bash -l {0}
        run: pip install -e .[develop] --use-feature=2020-resolver 2>&1 | tee test_osx_artifacts_python_${{ matrix.python-version }}/install.txt
      - shell: bash -l {0}
        run: pytest tests/mytest.py 2>&1 | tee test_osx_artifacts_python_${{ matrix.python-version }}/test_report.txt
      - name: Upload artifacts
        if: ${{ always() }}  # upload artifacts even if fail
        uses: actions/upload-artifact@v2
        with:
          name: Test_OSX_python_${{ matrix.python-version }}
          path: test_osx_artifacts_python_${{ matrix.python-version }}
